//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /dataa/home/joha/src/csharp/crawl/src/libcompiler/Crawl.g4 by ANTLR 4.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace libcompiler.Parser {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CrawlParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6")]
[System.CLSCompliant(false)]
public interface ICrawlListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.translation_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTranslation_unit([NotNull] CrawlParser.Translation_unitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.translation_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTranslation_unit([NotNull] CrawlParser.Translation_unitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.import_directives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImport_directives([NotNull] CrawlParser.Import_directivesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.import_directives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImport_directives([NotNull] CrawlParser.Import_directivesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.import_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImport_directive([NotNull] CrawlParser.Import_directiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.import_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImport_directive([NotNull] CrawlParser.Import_directiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatements([NotNull] CrawlParser.StatementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatements([NotNull] CrawlParser.StatementsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.side_effect_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSide_effect_stmt([NotNull] CrawlParser.Side_effect_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.side_effect_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSide_effect_stmt([NotNull] CrawlParser.Side_effect_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.if_selection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_selection([NotNull] CrawlParser.If_selectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.if_selection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_selection([NotNull] CrawlParser.If_selectionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor_loop([NotNull] CrawlParser.For_loopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor_loop([NotNull] CrawlParser.For_loopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.while_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhile_loop([NotNull] CrawlParser.While_loopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.while_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhile_loop([NotNull] CrawlParser.While_loopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_statement([NotNull] CrawlParser.Return_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_statement([NotNull] CrawlParser.Return_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] CrawlParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] CrawlParser.DeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.function_decleration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_decleration([NotNull] CrawlParser.Function_declerationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.function_decleration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_decleration([NotNull] CrawlParser.Function_declerationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameters([NotNull] CrawlParser.ParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameters([NotNull] CrawlParser.ParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] CrawlParser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] CrawlParser.ParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.generic_parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_parameters([NotNull] CrawlParser.Generic_parametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.generic_parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_parameters([NotNull] CrawlParser.Generic_parametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.generic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric([NotNull] CrawlParser.GenericContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.generic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric([NotNull] CrawlParser.GenericContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.variable_declerations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_declerations([NotNull] CrawlParser.Variable_declerationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.variable_declerations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_declerations([NotNull] CrawlParser.Variable_declerationsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.variable_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_decl([NotNull] CrawlParser.Variable_declContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.variable_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_decl([NotNull] CrawlParser.Variable_declContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.function_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_body([NotNull] CrawlParser.Function_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.function_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_body([NotNull] CrawlParser.Function_bodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.class_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass_declaration([NotNull] CrawlParser.Class_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.class_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass_declaration([NotNull] CrawlParser.Class_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.inheritances"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInheritances([NotNull] CrawlParser.InheritancesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.inheritances"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInheritances([NotNull] CrawlParser.InheritancesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.inheritance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInheritance([NotNull] CrawlParser.InheritanceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.inheritance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInheritance([NotNull] CrawlParser.InheritanceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.class_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass_body([NotNull] CrawlParser.Class_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.class_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass_body([NotNull] CrawlParser.Class_bodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] CrawlParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] CrawlParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] CrawlParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] CrawlParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.array_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray_type([NotNull] CrawlParser.Array_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.array_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray_type([NotNull] CrawlParser.Array_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.function_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_type([NotNull] CrawlParser.Function_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.function_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_type([NotNull] CrawlParser.Function_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.function_arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_arguments([NotNull] CrawlParser.Function_argumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.function_arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_arguments([NotNull] CrawlParser.Function_argumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.protection_level"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProtection_level([NotNull] CrawlParser.Protection_levelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.protection_level"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProtection_level([NotNull] CrawlParser.Protection_levelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.ref_expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRef_expression_list([NotNull] CrawlParser.Ref_expression_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.ref_expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRef_expression_list([NotNull] CrawlParser.Ref_expression_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression_list([NotNull] CrawlParser.Expression_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression_list([NotNull] CrawlParser.Expression_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] CrawlParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] CrawlParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.range_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRange_expression([NotNull] CrawlParser.Range_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.range_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRange_expression([NotNull] CrawlParser.Range_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOr_expression([NotNull] CrawlParser.Or_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.or_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOr_expression([NotNull] CrawlParser.Or_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.and_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnd_expression([NotNull] CrawlParser.And_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.and_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnd_expression([NotNull] CrawlParser.And_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.comparison_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparison_expression([NotNull] CrawlParser.Comparison_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.comparison_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparison_expression([NotNull] CrawlParser.Comparison_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.additive_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditive_expression([NotNull] CrawlParser.Additive_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.additive_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditive_expression([NotNull] CrawlParser.Additive_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.multiplicative_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicative_expression([NotNull] CrawlParser.Multiplicative_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.multiplicative_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicative_expression([NotNull] CrawlParser.Multiplicative_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.exponential_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExponential_expression([NotNull] CrawlParser.Exponential_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.exponential_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExponential_expression([NotNull] CrawlParser.Exponential_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.cast_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCast_expression([NotNull] CrawlParser.Cast_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.cast_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCast_expression([NotNull] CrawlParser.Cast_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.unary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary_expression([NotNull] CrawlParser.Unary_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.unary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary_expression([NotNull] CrawlParser.Unary_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.postfix_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfix_expression([NotNull] CrawlParser.Postfix_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.postfix_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfix_expression([NotNull] CrawlParser.Postfix_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.call_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCall_expression([NotNull] CrawlParser.Call_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.call_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCall_expression([NotNull] CrawlParser.Call_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.subfield_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubfield_expression([NotNull] CrawlParser.Subfield_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.subfield_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubfield_expression([NotNull] CrawlParser.Subfield_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.index_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndex_expression([NotNull] CrawlParser.Index_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.index_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndex_expression([NotNull] CrawlParser.Index_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.generic_unpack_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_unpack_expression([NotNull] CrawlParser.Generic_unpack_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.generic_unpack_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_unpack_expression([NotNull] CrawlParser.Generic_unpack_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtom([NotNull] CrawlParser.AtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtom([NotNull] CrawlParser.AtomContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.comparison_symbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparison_symbol([NotNull] CrawlParser.Comparison_symbolContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.comparison_symbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparison_symbol([NotNull] CrawlParser.Comparison_symbolContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.unary_symbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary_symbol([NotNull] CrawlParser.Unary_symbolContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.unary_symbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary_symbol([NotNull] CrawlParser.Unary_symbolContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] CrawlParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] CrawlParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.boolean_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean_literal([NotNull] CrawlParser.Boolean_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.boolean_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean_literal([NotNull] CrawlParser.Boolean_literalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.integer_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInteger_literal([NotNull] CrawlParser.Integer_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.integer_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInteger_literal([NotNull] CrawlParser.Integer_literalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.real_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReal_literal([NotNull] CrawlParser.Real_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.real_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReal_literal([NotNull] CrawlParser.Real_literalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CrawlParser.string_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString_literal([NotNull] CrawlParser.String_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CrawlParser.string_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString_literal([NotNull] CrawlParser.String_literalContext context);
}
} // namespace libcompiler.Parser
